class t{constructor(t,e){this.x=t,this.y=e}set(t,e){this.x=t,this.y=e}}class e extends t{constructor(){super(0,0),this.down=!1,this.previous=new t(0,0)}}class s{constructor(){this.eventListeners=new Map}addEventListener(t,e){const s=this.eventListeners.get(t)||new Set;s.add(e),this.eventListeners.set(t,s)}removeEventListener(t,e){const s=this.eventListeners.get(t);s&&s.delete(e)}dispatchEvent(t,e){const s=this.eventListeners.get(t);s&&[...s].forEach((t=>t(e)))}}const i=(t,e,s,i)=>{const o=(s-t)**2,r=(i-e)**2;return Math.sqrt(o+r)},o=(t,e)=>s=>{!s.isPrimary||!e.secondaryMouseButton&&s.button>0||e.ignoreModifiers&&(s.altKey||s.ctrlKey||s.metaKey||1===s.button)||(s.cancelable&&s.preventDefault(),t(s))},r=(t,e,s,i,o)=>(t-e)*(o-i)/(s-e)+i,n="draw",h="erase",a="fill",c="disabled",u=[n,h],d=["weight","smoothing","adaptiveStroke","mode","secondaryMouseButton","ignoreModifiers","pressureLow","pressureHigh","pressureSmoothing"];class l extends s{adaptiveStroke=!0;canvas;recordStrokes=!1;smoothing=.85;thickness=2;secondaryMouseButton=!1;contextMenu=!1;ignoreModifiers=!1;pressureLow=0;pressureHigh=2;pressureSmoothing=.3;#t;#e=!1;#s=!1;#i=[];#o=null;#r=n;#n=new e;#h=.5;#a;#c=[];#u=2;#d=2;constructor(t,e={}){if("undefined"==typeof window)throw new Error("atrament: looks like we're not running in a browser");super(),this.canvas=l.#l(t,e),this.#t=l.#m(this.canvas,e),this.#p({FillWorker:e.fill}),this.#a=(({canvas:t,move:e,down:s,up:i},r)=>{const n=o(e,r),h=o(s,r),a=o(i,r);return t.addEventListener("pointermove",n),t.addEventListener("pointerdown",h),document.addEventListener("pointerup",a),document.addEventListener("pointerout",a),()=>{t.removeEventListener("pointermove",n),t.removeEventListener("pointerdown",h),document.removeEventListener("pointerup",a),document.removeEventListener("pointerout",a)}})({canvas:this.canvas,move:this.#v.bind(this),down:this.#g.bind(this),up:this.#w.bind(this)},this),d.forEach((t=>{void 0!==e[t]&&(this[t]=e[t])})),this.canvas.addEventListener("contextmenu",(t=>{this.secondaryMouseButton&&this.mode!==c?t.preventDefault():this.contextMenu=!0}))}beginStroke(t,e){this.#t.moveTo(t,e),this.#u=this.#d,this.recordStrokes&&(this.strokeTimestamp=performance.now()),this.dispatchEvent("strokestart",{x:t,y:e})}endStroke(t,e){this.dispatchEvent("strokeend",{x:t,y:e}),this.recordStrokes&&this.dispatchEvent("strokerecorded",{stroke:this.currentStroke}),this.#c=[],delete this.strokeTimestamp}draw(e,s,o,r,h=.5){const a=o||e,c=r||s,u=this.getSmoothingFactor(i(e,s,a,c)),d=e-(e-a)*u,l=s-(s-c)*u,m=h-(h-this.#h)*this.pressureSmoothing,p=i(d,l,a,c);if(this.adaptiveStroke&&.5===h){const t=(p-2)/98*(this.#f-this.#d)+this.#d;this.#u>t?this.#u-=.25:this.#u<t&&(this.#u+=.25)}else this.#u=this.#k(m);this.#t.lineWidth=this.#u/this.canvas.offsetWidth*this.canvas.width;const v=this.#x(a,c),g=this.#x(d,l);return this.#t.beginPath(),this.#t.moveTo(...v),this.#t.quadraticCurveTo(...v,...g),this.#t.closePath(),this.#t.stroke(),this.recordStrokes&&(this.#c.push({point:new t(e,s),time:performance.now()-this.strokeTimestamp,pressure:h}),this.dispatchEvent("segmentdrawn",{stroke:this.currentStroke})),this.#e||this.#r!==n||(this.#e=!0,this.dispatchEvent("dirty")),{x:d,y:l}}clear(){this.#e=!1,this.dispatchEvent("clean");const t=this.mode===h;t&&(this.mode=n),this.#t.save(),this.#t.setTransform(1,0,0,1,0,0),this.#t.clearRect(0,0,this.canvas.width,this.canvas.height),this.#t.restore(),t&&(this.mode=h)}destroy(){this.clear(),this.#a?.()}get color(){return this.#t.strokeStyle}set color(t){if("string"!=typeof t)throw new Error("atrament: wrong argument type setting color");this.#t.strokeStyle=t}get weight(){return this.#d}set weight(t){if("number"!=typeof t)throw new Error("atrament: wrong argument type setting weight");this.#u=t,this.#d=t}get#f(){return this.#d+30}getSmoothingFactor(t){return Math.min(.87,this.smoothing+(t-60)/3e3)}get mode(){return this.#r}set mode(t){switch(t){case h:this.#r=h,this.#t.globalCompositeOperation="destination-out";break;case a:this.#r=a,this.#t.globalCompositeOperation="source-over";break;case c:this.#r=c;break;case n:this.#r=n,this.#t.globalCompositeOperation="source-over";break;default:throw new Error("atrament: mode is not one of the allowed modes.")}}get currentStroke(){return{segments:this.#c.slice(),mode:this.mode,weight:this.weight,smoothing:this.smoothing,color:this.color,adaptiveStroke:this.adaptiveStroke}}get dirty(){return this.#e}#x(t,e){return[t/this.canvas.offsetWidth*this.canvas.width,e/this.canvas.offsetHeight*this.canvas.height]}#k(t){return.5===t?this.#d:t<.5?this.#d*r(t,0,.5,this.pressureLow,1):this.#d*r(t,.5,1,1,this.pressureHigh)}static#l(t,e){let s;if(t instanceof window.Node&&"CANVAS"===t.tagName)s=t;else{if("string"!=typeof t)throw new Error(`atrament: can't look for canvas based on '${t}'`);s=document.querySelector(t)}if(!s)throw new Error("atrament: canvas not found");return s.width=e.width||s.width,s.height=e.height||s.height,s.style.touchAction="none",s}static#m(t,e){const s=t.getContext("2d");return s.globalCompositeOperation="source-over",s.globalAlpha=1,s.strokeStyle=e.color||"rgba(0,0,0,1)",s.lineCap="round",s.lineJoin="round",s}#v(t){(t.getCoalescedEvents?.()||[t]).forEach((t=>{const e=t.offsetX,s=t.offsetY;if(this.#n.down&&u.includes(this.#r)){this.contextMenu&&(this.#n.previous.set(e,s),this.contextMenu=!1);const{x:i,y:o}=this.draw(e,s,this.#n.previous.x,this.#n.previous.y,t.pressure);this.#n.set(e,s),this.#n.previous.set(i,o),this.#h=t.pressure}else this.#n.set(e,s),this.#n.previous.set(e,s)}))}#g(t){this.dispatchEvent("pointerdown",t),this.mode!==a?(this.#n.down=!0,this.#v(t),this.#h=t.pressure,this.beginStroke(this.#n.previous.x,this.#n.previous.y)):this.#y()}#w(t){this.dispatchEvent("pointerup",t),this.#r!==a&&this.#n.down&&(this.#n.down=!1,this.#n.x===t.offsetX&&this.#n.y===t.offsetY&&u.includes(this.mode)&&this.draw(this.#n.x,this.#n.y,this.#n.previous.x,this.#n.previous.y,this.#h),this.#n.previous.set(0,0),this.endStroke(this.#n.x,this.#n.y))}#p({FillWorker:t}){t&&(this.#o=new t,this.#o.addEventListener("message",(({data:t})=>{if("fill-result"===t.type){this.#s=!1,this.dispatchEvent("fillend",{});const e=new ImageData(t.result,this.canvas.width,this.canvas.height);this.#t.putImageData(e,0,0),this.#i.length>0&&this.#E(this.#i.shift())}})))}#y(){if(!this.#o)throw new Error("atrament: fill mode only works if the fillWorker option is passed to the Atrament constructor");const{x:t,y:e}=this.#n;this.dispatchEvent("fillstart",{x:t,y:e});const s=Array.from(this.#t.getImageData(t,e,1,1).data),i={color:this.color,globalAlpha:this.#t.globalAlpha,width:this.canvas.width,height:this.canvas.height,startColor:s,startX:t,startY:e};this.#s?this.#i.push(i):(this.#s=!0,this.#E(i))}#E(t){const e=this.#t.getImageData(0,0,this.canvas.width,this.canvas.height).data;this.#o?.postMessage({image:e,...t},[e.buffer])}}export{c as MODE_DISABLED,n as MODE_DRAW,h as MODE_ERASE,a as MODE_FILL,l as default};
